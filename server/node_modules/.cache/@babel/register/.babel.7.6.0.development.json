{
  "{\"sourceRoot\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server\",\"filename\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
      "filename": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _schema = _interopRequireDefault(require(\"./schema/schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require(\"express\");\n\nvar graphqlHTTP = require(\"express-graphql\");\n\nvar port = 4000;\nvar app = express();\napp.use(\"/graphql\", graphqlHTTP({\n  schema: _schema[\"default\"],\n  graphiql: true\n}));\napp.listen(port, function () {\n  return console.log(\"GraphQL listening to port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImdyYXBocWxIVFRQIiwicG9ydCIsImFwcCIsInVzZSIsInNjaGVtYSIsImdyYXBoaXFsIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsaUJBQUQsQ0FBM0I7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHLElBQWI7QUFDQSxJQUFNQyxHQUFHLEdBQUdKLE9BQU8sRUFBbkI7QUFFQUksR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBUixFQUFvQkgsV0FBVyxDQUFDO0FBQUVJLEVBQUFBLE1BQU0sRUFBTkEsa0JBQUY7QUFBVUMsRUFBQUEsUUFBUSxFQUFFO0FBQXBCLENBQUQsQ0FBL0I7QUFFQUgsR0FBRyxDQUFDSSxNQUFKLENBQVdMLElBQVgsRUFBaUI7QUFBQSxTQUFNTSxPQUFPLENBQUNDLEdBQVIscUNBQXlDUCxJQUF6QyxFQUFOO0FBQUEsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2pvZWwvZGV2L3JuZC9naXRodWIuY29tL2RndGxtb25rL2dyYXBocWwvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNjaGVtYSBmcm9tIFwiLi9zY2hlbWEvc2NoZW1hXCI7XG5jb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XG5jb25zdCBncmFwaHFsSFRUUCA9IHJlcXVpcmUoXCJleHByZXNzLWdyYXBocWxcIik7XG5jb25zdCBwb3J0ID0gNDAwMDtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShcIi9ncmFwaHFsXCIsIGdyYXBocWxIVFRQKHsgc2NoZW1hLCBncmFwaGlxbDogdHJ1ZSB9KSk7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYEdyYXBoUUwgbGlzdGVuaW5nIHRvIHBvcnQgJHtwb3J0fWApKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "graphqlHTTP",
        "port",
        "app",
        "use",
        "schema",
        "graphiql",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAME,IAAI,GAAG,IAAb;AACA,IAAMC,GAAG,GAAGJ,OAAO,EAAnB;AAEAI,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBH,WAAW,CAAC;AAAEI,EAAAA,MAAM,EAANA,kBAAF;AAAUC,EAAAA,QAAQ,EAAE;AAApB,CAAD,CAA/B;AAEAH,GAAG,CAACI,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAMM,OAAO,CAACC,GAAR,qCAAyCP,IAAzC,EAAN;AAAA,CAAjB",
      "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
      "sourcesContent": [
        "import schema from \"./schema/schema\";\nconst express = require(\"express\");\nconst graphqlHTTP = require(\"express-graphql\");\nconst port = 4000;\nconst app = express();\n\napp.use(\"/graphql\", graphqlHTTP({ schema, graphiql: true }));\n\napp.listen(port, () => console.log(`GraphQL listening to port ${port}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568213910141
  },
  "{\"sourceRoot\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/schema\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server\",\"filename\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/schema/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/schema",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
      "filename": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/schema/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/schema/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/schema/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/schema",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _seed = require(\"../models/seed\");\n\nvar _graphql = require(\"graphql\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar AuthorType = new _graphql.GraphQLObjectType({\n  name: \"Author\",\n  fields: function fields() {\n    return {\n      id: {\n        type: _graphql.GraphQLID\n      },\n      name: {\n        type: _graphql.GraphQLString\n      },\n      age: {\n        type: _graphql.GraphQLInt\n      },\n      books: {\n        type: new _graphql.GraphQLList(BookType),\n        resolve: function resolve(parent, args) {\n          return _lodash[\"default\"].filter(_seed.books, {\n            authorId: parent.id\n          });\n        }\n      }\n    };\n  }\n});\nvar BookType = new _graphql.GraphQLObjectType({\n  name: \"Book\",\n  fields: function fields() {\n    return {\n      id: {\n        type: _graphql.GraphQLID\n      },\n      name: {\n        type: _graphql.GraphQLString\n      },\n      genre: {\n        type: _graphql.GraphQLString\n      },\n      // relationship\n      author: {\n        type: AuthorType,\n        resolve: function resolve(parent, args) {\n          return _lodash[\"default\"].find(_seed.authors, {\n            id: parent.authorId\n          });\n        }\n      }\n    };\n  }\n}); // frontend: book(id :'11') {\n// name,\n// genre\n// }\n\nvar RootQuery = new _graphql.GraphQLObjectType({\n  name: \"RootQueryType\",\n  fields: {\n    book: {\n      type: BookType,\n      args: {\n        id: {\n          type: _graphql.GraphQLID\n        }\n      },\n      resolve: function resolve(parent, args) {\n        return _lodash[\"default\"].find(_seed.books, {\n          id: args.id\n        }); // code to get data from db\n        // args = query params object\n      }\n    },\n    books: {\n      type: new _graphql.GraphQLList(BookType),\n      // args: { id: { type: GraphQLID } },\n      resolve: function resolve(parent, args) {\n        return _seed.books; // code to get data from db\n        // args = query params object\n      }\n    },\n    author: {\n      type: AuthorType,\n      args: {\n        id: {\n          type: _graphql.GraphQLID\n        }\n      },\n      resolve: function resolve(parent, args) {\n        return _lodash[\"default\"].find(_seed.authors, {\n          id: args.id\n        });\n      }\n    },\n    authors: {\n      type: new _graphql.GraphQLList(AuthorType),\n      args: {\n        id: {\n          type: _graphql.GraphQLID\n        }\n      },\n      resolve: function resolve(parent, args) {\n        return _seed.authors;\n      }\n    }\n  }\n}); // Put together a schema\n\nvar _default = new _graphql.GraphQLSchema({\n  query: RootQuery\n});\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJBdXRob3JUeXBlIiwiR3JhcGhRTE9iamVjdFR5cGUiLCJuYW1lIiwiZmllbGRzIiwiaWQiLCJ0eXBlIiwiR3JhcGhRTElEIiwiR3JhcGhRTFN0cmluZyIsImFnZSIsIkdyYXBoUUxJbnQiLCJib29rcyIsIkdyYXBoUUxMaXN0IiwiQm9va1R5cGUiLCJyZXNvbHZlIiwicGFyZW50IiwiYXJncyIsIl8iLCJmaWx0ZXIiLCJhdXRob3JJZCIsImdlbnJlIiwiYXV0aG9yIiwiZmluZCIsImF1dGhvcnMiLCJSb290UXVlcnkiLCJib29rIiwiR3JhcGhRTFNjaGVtYSIsInF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFTQSxJQUFNQSxVQUFVLEdBQUcsSUFBSUMsMEJBQUosQ0FBc0I7QUFDdkNDLEVBQUFBLElBQUksRUFBRSxRQURpQztBQUV2Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQUEsV0FBTztBQUNiQyxNQUFBQSxFQUFFLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFQztBQUFSLE9BRFM7QUFFYkosTUFBQUEsSUFBSSxFQUFFO0FBQUVHLFFBQUFBLElBQUksRUFBRUU7QUFBUixPQUZPO0FBR2JDLE1BQUFBLEdBQUcsRUFBRTtBQUFFSCxRQUFBQSxJQUFJLEVBQUVJO0FBQVIsT0FIUTtBQUliQyxNQUFBQSxLQUFLLEVBQUU7QUFDTEwsUUFBQUEsSUFBSSxFQUFFLElBQUlNLG9CQUFKLENBQWdCQyxRQUFoQixDQUREO0FBRUxDLFFBQUFBLE9BRkssbUJBRUdDLE1BRkgsRUFFV0MsSUFGWCxFQUVpQjtBQUNwQixpQkFBT0MsbUJBQUVDLE1BQUYsQ0FBU1AsV0FBVCxFQUFnQjtBQUFFUSxZQUFBQSxRQUFRLEVBQUVKLE1BQU0sQ0FBQ1Y7QUFBbkIsV0FBaEIsQ0FBUDtBQUNEO0FBSkk7QUFKTSxLQUFQO0FBQUE7QUFGK0IsQ0FBdEIsQ0FBbkI7QUFlQSxJQUFNUSxRQUFRLEdBQUcsSUFBSVgsMEJBQUosQ0FBc0I7QUFDckNDLEVBQUFBLElBQUksRUFBRSxNQUQrQjtBQUVyQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQUEsV0FBTztBQUNiQyxNQUFBQSxFQUFFLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFQztBQUFSLE9BRFM7QUFFYkosTUFBQUEsSUFBSSxFQUFFO0FBQUVHLFFBQUFBLElBQUksRUFBRUU7QUFBUixPQUZPO0FBR2JZLE1BQUFBLEtBQUssRUFBRTtBQUFFZCxRQUFBQSxJQUFJLEVBQUVFO0FBQVIsT0FITTtBQUliO0FBQ0FhLE1BQUFBLE1BQU0sRUFBRTtBQUNOZixRQUFBQSxJQUFJLEVBQUVMLFVBREE7QUFFTmEsUUFBQUEsT0FGTSxtQkFFRUMsTUFGRixFQUVVQyxJQUZWLEVBRWdCO0FBQ3BCLGlCQUFPQyxtQkFBRUssSUFBRixDQUFPQyxhQUFQLEVBQWdCO0FBQUVsQixZQUFBQSxFQUFFLEVBQUVVLE1BQU0sQ0FBQ0k7QUFBYixXQUFoQixDQUFQO0FBQ0Q7QUFKSztBQUxLLEtBQVA7QUFBQTtBQUY2QixDQUF0QixDQUFqQixDLENBZ0JBO0FBQ0E7QUFDQTtBQUNBOztBQUNBLElBQU1LLFNBQVMsR0FBRyxJQUFJdEIsMEJBQUosQ0FBc0I7QUFDdENDLEVBQUFBLElBQUksRUFBRSxlQURnQztBQUV0Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ05xQixJQUFBQSxJQUFJLEVBQUU7QUFDSm5CLE1BQUFBLElBQUksRUFBRU8sUUFERjtBQUVKRyxNQUFBQSxJQUFJLEVBQUU7QUFBRVgsUUFBQUEsRUFBRSxFQUFFO0FBQUVDLFVBQUFBLElBQUksRUFBRUM7QUFBUjtBQUFOLE9BRkY7QUFHSk8sTUFBQUEsT0FISSxtQkFHSUMsTUFISixFQUdZQyxJQUhaLEVBR2tCO0FBQ3BCLGVBQU9DLG1CQUFFSyxJQUFGLENBQU9YLFdBQVAsRUFBYztBQUFFTixVQUFBQSxFQUFFLEVBQUVXLElBQUksQ0FBQ1g7QUFBWCxTQUFkLENBQVAsQ0FEb0IsQ0FFcEI7QUFDQTtBQUNEO0FBUEcsS0FEQTtBQVVOTSxJQUFBQSxLQUFLLEVBQUU7QUFDTEwsTUFBQUEsSUFBSSxFQUFFLElBQUlNLG9CQUFKLENBQWdCQyxRQUFoQixDQUREO0FBRUw7QUFDQUMsTUFBQUEsT0FISyxtQkFHR0MsTUFISCxFQUdXQyxJQUhYLEVBR2lCO0FBQ3BCLGVBQU9MLFdBQVAsQ0FEb0IsQ0FFcEI7QUFDQTtBQUNEO0FBUEksS0FWRDtBQW1CTlUsSUFBQUEsTUFBTSxFQUFFO0FBQ05mLE1BQUFBLElBQUksRUFBRUwsVUFEQTtBQUVOZSxNQUFBQSxJQUFJLEVBQUU7QUFBRVgsUUFBQUEsRUFBRSxFQUFFO0FBQUVDLFVBQUFBLElBQUksRUFBRUM7QUFBUjtBQUFOLE9BRkE7QUFHTk8sTUFBQUEsT0FITSxtQkFHRUMsTUFIRixFQUdVQyxJQUhWLEVBR2dCO0FBQ3BCLGVBQU9DLG1CQUFFSyxJQUFGLENBQU9DLGFBQVAsRUFBZ0I7QUFBRWxCLFVBQUFBLEVBQUUsRUFBRVcsSUFBSSxDQUFDWDtBQUFYLFNBQWhCLENBQVA7QUFDRDtBQUxLLEtBbkJGO0FBMEJOa0IsSUFBQUEsT0FBTyxFQUFFO0FBQ1BqQixNQUFBQSxJQUFJLEVBQUUsSUFBSU0sb0JBQUosQ0FBZ0JYLFVBQWhCLENBREM7QUFFUGUsTUFBQUEsSUFBSSxFQUFFO0FBQUVYLFFBQUFBLEVBQUUsRUFBRTtBQUFFQyxVQUFBQSxJQUFJLEVBQUVDO0FBQVI7QUFBTixPQUZDO0FBR1BPLE1BQUFBLE9BSE8sbUJBR0NDLE1BSEQsRUFHU0MsSUFIVCxFQUdlO0FBQ3BCLGVBQU9PLGFBQVA7QUFDRDtBQUxNO0FBMUJIO0FBRjhCLENBQXRCLENBQWxCLEMsQ0FzQ0E7O2VBQ2UsSUFBSUcsc0JBQUosQ0FBa0I7QUFBRUMsRUFBQUEsS0FBSyxFQUFFSDtBQUFULENBQWxCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2pvZWwvZGV2L3JuZC9naXRodWIuY29tL2RndGxtb25rL2dyYXBocWwvc2VydmVyL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gXCJsb2Rhc2hcIjtcbmltcG9ydCB7IGJvb2tzLCBhdXRob3JzIH0gZnJvbSBcIi4uL21vZGVscy9zZWVkXCI7XG5pbXBvcnQge1xuICBHcmFwaFFMT2JqZWN0VHlwZSxcbiAgR3JhcGhRTFN0cmluZyxcbiAgR3JhcGhRTElELFxuICBHcmFwaFFMSW50LFxuICBHcmFwaFFMU2NoZW1hLFxuICBHcmFwaFFMTGlzdFxufSBmcm9tIFwiZ3JhcGhxbFwiO1xuXG5jb25zdCBBdXRob3JUeXBlID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgbmFtZTogXCJBdXRob3JcIixcbiAgZmllbGRzOiAoKSA9PiAoe1xuICAgIGlkOiB7IHR5cGU6IEdyYXBoUUxJRCB9LFxuICAgIG5hbWU6IHsgdHlwZTogR3JhcGhRTFN0cmluZyB9LFxuICAgIGFnZTogeyB0eXBlOiBHcmFwaFFMSW50IH0sXG4gICAgYm9va3M6IHtcbiAgICAgIHR5cGU6IG5ldyBHcmFwaFFMTGlzdChCb29rVHlwZSksXG4gICAgICByZXNvbHZlKHBhcmVudCwgYXJncykge1xuICAgICAgICByZXR1cm4gXy5maWx0ZXIoYm9va3MsIHsgYXV0aG9ySWQ6IHBhcmVudC5pZCB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pXG59KTtcblxuY29uc3QgQm9va1R5cGUgPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoe1xuICBuYW1lOiBcIkJvb2tcIixcbiAgZmllbGRzOiAoKSA9PiAoe1xuICAgIGlkOiB7IHR5cGU6IEdyYXBoUUxJRCB9LFxuICAgIG5hbWU6IHsgdHlwZTogR3JhcGhRTFN0cmluZyB9LFxuICAgIGdlbnJlOiB7IHR5cGU6IEdyYXBoUUxTdHJpbmcgfSxcbiAgICAvLyByZWxhdGlvbnNoaXBcbiAgICBhdXRob3I6IHtcbiAgICAgIHR5cGU6IEF1dGhvclR5cGUsXG4gICAgICByZXNvbHZlKHBhcmVudCwgYXJncykge1xuICAgICAgICByZXR1cm4gXy5maW5kKGF1dGhvcnMsIHsgaWQ6IHBhcmVudC5hdXRob3JJZCB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pXG59KTtcblxuLy8gZnJvbnRlbmQ6IGJvb2soaWQgOicxMScpIHtcbi8vIG5hbWUsXG4vLyBnZW5yZVxuLy8gfVxuY29uc3QgUm9vdFF1ZXJ5ID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgbmFtZTogXCJSb290UXVlcnlUeXBlXCIsXG4gIGZpZWxkczoge1xuICAgIGJvb2s6IHtcbiAgICAgIHR5cGU6IEJvb2tUeXBlLFxuICAgICAgYXJnczogeyBpZDogeyB0eXBlOiBHcmFwaFFMSUQgfSB9LFxuICAgICAgcmVzb2x2ZShwYXJlbnQsIGFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIF8uZmluZChib29rcywgeyBpZDogYXJncy5pZCB9KTtcbiAgICAgICAgLy8gY29kZSB0byBnZXQgZGF0YSBmcm9tIGRiXG4gICAgICAgIC8vIGFyZ3MgPSBxdWVyeSBwYXJhbXMgb2JqZWN0XG4gICAgICB9XG4gICAgfSxcbiAgICBib29rczoge1xuICAgICAgdHlwZTogbmV3IEdyYXBoUUxMaXN0KEJvb2tUeXBlKSxcbiAgICAgIC8vIGFyZ3M6IHsgaWQ6IHsgdHlwZTogR3JhcGhRTElEIH0gfSxcbiAgICAgIHJlc29sdmUocGFyZW50LCBhcmdzKSB7XG4gICAgICAgIHJldHVybiBib29rcztcbiAgICAgICAgLy8gY29kZSB0byBnZXQgZGF0YSBmcm9tIGRiXG4gICAgICAgIC8vIGFyZ3MgPSBxdWVyeSBwYXJhbXMgb2JqZWN0XG4gICAgICB9XG4gICAgfSxcbiAgICBhdXRob3I6IHtcbiAgICAgIHR5cGU6IEF1dGhvclR5cGUsXG4gICAgICBhcmdzOiB7IGlkOiB7IHR5cGU6IEdyYXBoUUxJRCB9IH0sXG4gICAgICByZXNvbHZlKHBhcmVudCwgYXJncykge1xuICAgICAgICByZXR1cm4gXy5maW5kKGF1dGhvcnMsIHsgaWQ6IGFyZ3MuaWQgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhdXRob3JzOiB7XG4gICAgICB0eXBlOiBuZXcgR3JhcGhRTExpc3QoQXV0aG9yVHlwZSksXG4gICAgICBhcmdzOiB7IGlkOiB7IHR5cGU6IEdyYXBoUUxJRCB9IH0sXG4gICAgICByZXNvbHZlKHBhcmVudCwgYXJncykge1xuICAgICAgICByZXR1cm4gYXV0aG9ycztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xuXG4vLyBQdXQgdG9nZXRoZXIgYSBzY2hlbWFcbmV4cG9ydCBkZWZhdWx0IG5ldyBHcmFwaFFMU2NoZW1hKHsgcXVlcnk6IFJvb3RRdWVyeSB9KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "AuthorType",
        "GraphQLObjectType",
        "name",
        "fields",
        "id",
        "type",
        "GraphQLID",
        "GraphQLString",
        "age",
        "GraphQLInt",
        "books",
        "GraphQLList",
        "BookType",
        "resolve",
        "parent",
        "args",
        "_",
        "filter",
        "authorId",
        "genre",
        "author",
        "find",
        "authors",
        "RootQuery",
        "book",
        "GraphQLSchema",
        "query"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AASA,IAAMA,UAAU,GAAG,IAAIC,0BAAJ,CAAsB;AACvCC,EAAAA,IAAI,EAAE,QADiC;AAEvCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACbC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAEC;AAAR,OADS;AAEbJ,MAAAA,IAAI,EAAE;AAAEG,QAAAA,IAAI,EAAEE;AAAR,OAFO;AAGbC,MAAAA,GAAG,EAAE;AAAEH,QAAAA,IAAI,EAAEI;AAAR,OAHQ;AAIbC,MAAAA,KAAK,EAAE;AACLL,QAAAA,IAAI,EAAE,IAAIM,oBAAJ,CAAgBC,QAAhB,CADD;AAELC,QAAAA,OAFK,mBAEGC,MAFH,EAEWC,IAFX,EAEiB;AACpB,iBAAOC,mBAAEC,MAAF,CAASP,WAAT,EAAgB;AAAEQ,YAAAA,QAAQ,EAAEJ,MAAM,CAACV;AAAnB,WAAhB,CAAP;AACD;AAJI;AAJM,KAAP;AAAA;AAF+B,CAAtB,CAAnB;AAeA,IAAMQ,QAAQ,GAAG,IAAIX,0BAAJ,CAAsB;AACrCC,EAAAA,IAAI,EAAE,MAD+B;AAErCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACbC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAEC;AAAR,OADS;AAEbJ,MAAAA,IAAI,EAAE;AAAEG,QAAAA,IAAI,EAAEE;AAAR,OAFO;AAGbY,MAAAA,KAAK,EAAE;AAAEd,QAAAA,IAAI,EAAEE;AAAR,OAHM;AAIb;AACAa,MAAAA,MAAM,EAAE;AACNf,QAAAA,IAAI,EAAEL,UADA;AAENa,QAAAA,OAFM,mBAEEC,MAFF,EAEUC,IAFV,EAEgB;AACpB,iBAAOC,mBAAEK,IAAF,CAAOC,aAAP,EAAgB;AAAElB,YAAAA,EAAE,EAAEU,MAAM,CAACI;AAAb,WAAhB,CAAP;AACD;AAJK;AALK,KAAP;AAAA;AAF6B,CAAtB,CAAjB,C,CAgBA;AACA;AACA;AACA;;AACA,IAAMK,SAAS,GAAG,IAAItB,0BAAJ,CAAsB;AACtCC,EAAAA,IAAI,EAAE,eADgC;AAEtCC,EAAAA,MAAM,EAAE;AACNqB,IAAAA,IAAI,EAAE;AACJnB,MAAAA,IAAI,EAAEO,QADF;AAEJG,MAAAA,IAAI,EAAE;AAAEX,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAEC;AAAR;AAAN,OAFF;AAGJO,MAAAA,OAHI,mBAGIC,MAHJ,EAGYC,IAHZ,EAGkB;AACpB,eAAOC,mBAAEK,IAAF,CAAOX,WAAP,EAAc;AAAEN,UAAAA,EAAE,EAAEW,IAAI,CAACX;AAAX,SAAd,CAAP,CADoB,CAEpB;AACA;AACD;AAPG,KADA;AAUNM,IAAAA,KAAK,EAAE;AACLL,MAAAA,IAAI,EAAE,IAAIM,oBAAJ,CAAgBC,QAAhB,CADD;AAEL;AACAC,MAAAA,OAHK,mBAGGC,MAHH,EAGWC,IAHX,EAGiB;AACpB,eAAOL,WAAP,CADoB,CAEpB;AACA;AACD;AAPI,KAVD;AAmBNU,IAAAA,MAAM,EAAE;AACNf,MAAAA,IAAI,EAAEL,UADA;AAENe,MAAAA,IAAI,EAAE;AAAEX,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAEC;AAAR;AAAN,OAFA;AAGNO,MAAAA,OAHM,mBAGEC,MAHF,EAGUC,IAHV,EAGgB;AACpB,eAAOC,mBAAEK,IAAF,CAAOC,aAAP,EAAgB;AAAElB,UAAAA,EAAE,EAAEW,IAAI,CAACX;AAAX,SAAhB,CAAP;AACD;AALK,KAnBF;AA0BNkB,IAAAA,OAAO,EAAE;AACPjB,MAAAA,IAAI,EAAE,IAAIM,oBAAJ,CAAgBX,UAAhB,CADC;AAEPe,MAAAA,IAAI,EAAE;AAAEX,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAEC;AAAR;AAAN,OAFC;AAGPO,MAAAA,OAHO,mBAGCC,MAHD,EAGSC,IAHT,EAGe;AACpB,eAAOO,aAAP;AACD;AALM;AA1BH;AAF8B,CAAtB,CAAlB,C,CAsCA;;eACe,IAAIG,sBAAJ,CAAkB;AAAEC,EAAAA,KAAK,EAAEH;AAAT,CAAlB,C",
      "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/schema",
      "sourcesContent": [
        "import _ from \"lodash\";\nimport { books, authors } from \"../models/seed\";\nimport {\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLID,\n  GraphQLInt,\n  GraphQLSchema,\n  GraphQLList\n} from \"graphql\";\n\nconst AuthorType = new GraphQLObjectType({\n  name: \"Author\",\n  fields: () => ({\n    id: { type: GraphQLID },\n    name: { type: GraphQLString },\n    age: { type: GraphQLInt },\n    books: {\n      type: new GraphQLList(BookType),\n      resolve(parent, args) {\n        return _.filter(books, { authorId: parent.id });\n      }\n    }\n  })\n});\n\nconst BookType = new GraphQLObjectType({\n  name: \"Book\",\n  fields: () => ({\n    id: { type: GraphQLID },\n    name: { type: GraphQLString },\n    genre: { type: GraphQLString },\n    // relationship\n    author: {\n      type: AuthorType,\n      resolve(parent, args) {\n        return _.find(authors, { id: parent.authorId });\n      }\n    }\n  })\n});\n\n// frontend: book(id :'11') {\n// name,\n// genre\n// }\nconst RootQuery = new GraphQLObjectType({\n  name: \"RootQueryType\",\n  fields: {\n    book: {\n      type: BookType,\n      args: { id: { type: GraphQLID } },\n      resolve(parent, args) {\n        return _.find(books, { id: args.id });\n        // code to get data from db\n        // args = query params object\n      }\n    },\n    books: {\n      type: new GraphQLList(BookType),\n      // args: { id: { type: GraphQLID } },\n      resolve(parent, args) {\n        return books;\n        // code to get data from db\n        // args = query params object\n      }\n    },\n    author: {\n      type: AuthorType,\n      args: { id: { type: GraphQLID } },\n      resolve(parent, args) {\n        return _.find(authors, { id: args.id });\n      }\n    },\n    authors: {\n      type: new GraphQLList(AuthorType),\n      args: { id: { type: GraphQLID } },\n      resolve(parent, args) {\n        return authors;\n      }\n    }\n  }\n});\n\n// Put together a schema\nexport default new GraphQLSchema({ query: RootQuery });\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568219353058
  },
  "{\"sourceRoot\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server\",\"filename\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/models/seed.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
      "filename": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/models/seed.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/models/seed.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/models/seed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/models",
        "sourceFileName": "seed.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authors = exports.books = void 0;\n// Some fake data\nvar books = [{\n  id: \"1\",\n  name: \"Take Aim at the Police Van (Sono gosôsha wo nerae: 'Jûsangô taihisen' yori)\",\n  authorId: \"3\",\n  genre: \"Action|Crime|Mystery\"\n}, {\n  id: \"2\",\n  name: \"Arachnophobia\",\n  authorId: \"1\",\n  genre: \"Comedy|Horror\"\n}, {\n  id: \"3\",\n  name: \"Permanent Midnight\",\n  authorId: \"2\",\n  genre: \"Drama\"\n}, {\n  id: \"4\",\n  name: \"The Hallelujah Handshake\",\n  authorId: \"5\",\n  genre: \"Drama\"\n}, {\n  id: \"5\",\n  name: \"I Like It Like That\",\n  authorId: \"4\",\n  genre: \"Comedy|Drama|Romance\"\n}, {\n  id: 6,\n  name: \"Exorcist, The\",\n  authorId: \"3\",\n  genre: \"Horror|Mystery\"\n}, {\n  id: 7,\n  name: \"Cosmic Psychos: Blokes You Can Trust\",\n  authorId: \"2\",\n  genre: \"Documentary|Musical\"\n}, {\n  id: 8,\n  name: \"To the Limit (Am Limit)\",\n  authorId: \"4\",\n  genre: \"Documentary\"\n}, {\n  id: 9,\n  name: \"Footnote (Hearat Shulayim)\",\n  authorId: \"2\",\n  genre: \"Drama\"\n}, {\n  id: 10,\n  name: \"Gervaise\",\n  authorId: \"4\",\n  genre: \"Drama\"\n}];\nexports.books = books;\nvar authors = [{\n  id: \"1\",\n  name: \"Maureene Earie\",\n  age: 38\n}, {\n  id: \"2\",\n  name: \"Maxy Stear\",\n  age: 14\n}, {\n  id: \"3\",\n  name: \"Germaine Pinckney\",\n  age: 29\n}, {\n  id: \"4\",\n  name: \"Roscoe Yerbury\",\n  age: 69\n}, {\n  id: \"5\",\n  name: \"Fredek Topley\",\n  age: 60\n}];\nexports.authors = authors;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlZWQuanMiXSwibmFtZXMiOlsiYm9va3MiLCJpZCIsIm5hbWUiLCJhdXRob3JJZCIsImdlbnJlIiwiYXV0aG9ycyIsImFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxJQUFNQSxLQUFLLEdBQUcsQ0FDWjtBQUNFQyxFQUFBQSxFQUFFLEVBQUUsR0FETjtBQUVFQyxFQUFBQSxJQUFJLEVBQ0YsNkVBSEo7QUFJRUMsRUFBQUEsUUFBUSxFQUFFLEdBSlo7QUFLRUMsRUFBQUEsS0FBSyxFQUFFO0FBTFQsQ0FEWSxFQVFaO0FBQ0VILEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBRUVDLEVBQUFBLElBQUksRUFBRSxlQUZSO0FBR0VDLEVBQUFBLFFBQVEsRUFBRSxHQUhaO0FBSUVDLEVBQUFBLEtBQUssRUFBRTtBQUpULENBUlksRUFjWjtBQUNFSCxFQUFBQSxFQUFFLEVBQUUsR0FETjtBQUVFQyxFQUFBQSxJQUFJLEVBQUUsb0JBRlI7QUFHRUMsRUFBQUEsUUFBUSxFQUFFLEdBSFo7QUFJRUMsRUFBQUEsS0FBSyxFQUFFO0FBSlQsQ0FkWSxFQW9CWjtBQUNFSCxFQUFBQSxFQUFFLEVBQUUsR0FETjtBQUVFQyxFQUFBQSxJQUFJLEVBQUUsMEJBRlI7QUFHRUMsRUFBQUEsUUFBUSxFQUFFLEdBSFo7QUFJRUMsRUFBQUEsS0FBSyxFQUFFO0FBSlQsQ0FwQlksRUEwQlo7QUFDRUgsRUFBQUEsRUFBRSxFQUFFLEdBRE47QUFFRUMsRUFBQUEsSUFBSSxFQUFFLHFCQUZSO0FBR0VDLEVBQUFBLFFBQVEsRUFBRSxHQUhaO0FBSUVDLEVBQUFBLEtBQUssRUFBRTtBQUpULENBMUJZLEVBZ0NaO0FBQ0VILEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLElBQUksRUFBRSxlQUZSO0FBR0VDLEVBQUFBLFFBQVEsRUFBRSxHQUhaO0FBSUVDLEVBQUFBLEtBQUssRUFBRTtBQUpULENBaENZLEVBc0NaO0FBQ0VILEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLElBQUksRUFBRSxzQ0FGUjtBQUdFQyxFQUFBQSxRQUFRLEVBQUUsR0FIWjtBQUlFQyxFQUFBQSxLQUFLLEVBQUU7QUFKVCxDQXRDWSxFQTRDWjtBQUNFSCxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxFQUFBQSxJQUFJLEVBQUUseUJBRlI7QUFHRUMsRUFBQUEsUUFBUSxFQUFFLEdBSFo7QUFJRUMsRUFBQUEsS0FBSyxFQUFFO0FBSlQsQ0E1Q1ksRUFrRFo7QUFDRUgsRUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsRUFBQUEsSUFBSSxFQUFFLDRCQUZSO0FBR0VDLEVBQUFBLFFBQVEsRUFBRSxHQUhaO0FBSUVDLEVBQUFBLEtBQUssRUFBRTtBQUpULENBbERZLEVBd0RaO0FBQ0VILEVBQUFBLEVBQUUsRUFBRSxFQUROO0FBRUVDLEVBQUFBLElBQUksRUFBRSxVQUZSO0FBR0VDLEVBQUFBLFFBQVEsRUFBRSxHQUhaO0FBSUVDLEVBQUFBLEtBQUssRUFBRTtBQUpULENBeERZLENBQWQ7O0FBZ0VBLElBQU1DLE9BQU8sR0FBRyxDQUNkO0FBQ0VKLEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBRUVDLEVBQUFBLElBQUksRUFBRSxnQkFGUjtBQUdFSSxFQUFBQSxHQUFHLEVBQUU7QUFIUCxDQURjLEVBTWQ7QUFDRUwsRUFBQUEsRUFBRSxFQUFFLEdBRE47QUFFRUMsRUFBQUEsSUFBSSxFQUFFLFlBRlI7QUFHRUksRUFBQUEsR0FBRyxFQUFFO0FBSFAsQ0FOYyxFQVdkO0FBQ0VMLEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBRUVDLEVBQUFBLElBQUksRUFBRSxtQkFGUjtBQUdFSSxFQUFBQSxHQUFHLEVBQUU7QUFIUCxDQVhjLEVBZ0JkO0FBQ0VMLEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBRUVDLEVBQUFBLElBQUksRUFBRSxnQkFGUjtBQUdFSSxFQUFBQSxHQUFHLEVBQUU7QUFIUCxDQWhCYyxFQXFCZDtBQUNFTCxFQUFBQSxFQUFFLEVBQUUsR0FETjtBQUVFQyxFQUFBQSxJQUFJLEVBQUUsZUFGUjtBQUdFSSxFQUFBQSxHQUFHLEVBQUU7QUFIUCxDQXJCYyxDQUFoQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvam9lbC9kZXYvcm5kL2dpdGh1Yi5jb20vZGd0bG1vbmsvZ3JhcGhxbC9zZXJ2ZXIvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU29tZSBmYWtlIGRhdGFcbmNvbnN0IGJvb2tzID0gW1xuICB7XG4gICAgaWQ6IFwiMVwiLFxuICAgIG5hbWU6XG4gICAgICBcIlRha2UgQWltIGF0IHRoZSBQb2xpY2UgVmFuIChTb25vIGdvc8O0c2hhIHdvIG5lcmFlOiAnSsO7c2FuZ8O0IHRhaWhpc2VuJyB5b3JpKVwiLFxuICAgIGF1dGhvcklkOiBcIjNcIixcbiAgICBnZW5yZTogXCJBY3Rpb258Q3JpbWV8TXlzdGVyeVwiXG4gIH0sXG4gIHtcbiAgICBpZDogXCIyXCIsXG4gICAgbmFtZTogXCJBcmFjaG5vcGhvYmlhXCIsXG4gICAgYXV0aG9ySWQ6IFwiMVwiLFxuICAgIGdlbnJlOiBcIkNvbWVkeXxIb3Jyb3JcIlxuICB9LFxuICB7XG4gICAgaWQ6IFwiM1wiLFxuICAgIG5hbWU6IFwiUGVybWFuZW50IE1pZG5pZ2h0XCIsXG4gICAgYXV0aG9ySWQ6IFwiMlwiLFxuICAgIGdlbnJlOiBcIkRyYW1hXCJcbiAgfSxcbiAge1xuICAgIGlkOiBcIjRcIixcbiAgICBuYW1lOiBcIlRoZSBIYWxsZWx1amFoIEhhbmRzaGFrZVwiLFxuICAgIGF1dGhvcklkOiBcIjVcIixcbiAgICBnZW5yZTogXCJEcmFtYVwiXG4gIH0sXG4gIHtcbiAgICBpZDogXCI1XCIsXG4gICAgbmFtZTogXCJJIExpa2UgSXQgTGlrZSBUaGF0XCIsXG4gICAgYXV0aG9ySWQ6IFwiNFwiLFxuICAgIGdlbnJlOiBcIkNvbWVkeXxEcmFtYXxSb21hbmNlXCJcbiAgfSxcbiAge1xuICAgIGlkOiA2LFxuICAgIG5hbWU6IFwiRXhvcmNpc3QsIFRoZVwiLFxuICAgIGF1dGhvcklkOiBcIjNcIixcbiAgICBnZW5yZTogXCJIb3Jyb3J8TXlzdGVyeVwiXG4gIH0sXG4gIHtcbiAgICBpZDogNyxcbiAgICBuYW1lOiBcIkNvc21pYyBQc3ljaG9zOiBCbG9rZXMgWW91IENhbiBUcnVzdFwiLFxuICAgIGF1dGhvcklkOiBcIjJcIixcbiAgICBnZW5yZTogXCJEb2N1bWVudGFyeXxNdXNpY2FsXCJcbiAgfSxcbiAge1xuICAgIGlkOiA4LFxuICAgIG5hbWU6IFwiVG8gdGhlIExpbWl0IChBbSBMaW1pdClcIixcbiAgICBhdXRob3JJZDogXCI0XCIsXG4gICAgZ2VucmU6IFwiRG9jdW1lbnRhcnlcIlxuICB9LFxuICB7XG4gICAgaWQ6IDksXG4gICAgbmFtZTogXCJGb290bm90ZSAoSGVhcmF0IFNodWxheWltKVwiLFxuICAgIGF1dGhvcklkOiBcIjJcIixcbiAgICBnZW5yZTogXCJEcmFtYVwiXG4gIH0sXG4gIHtcbiAgICBpZDogMTAsXG4gICAgbmFtZTogXCJHZXJ2YWlzZVwiLFxuICAgIGF1dGhvcklkOiBcIjRcIixcbiAgICBnZW5yZTogXCJEcmFtYVwiXG4gIH1cbl07XG5cbmNvbnN0IGF1dGhvcnMgPSBbXG4gIHtcbiAgICBpZDogXCIxXCIsXG4gICAgbmFtZTogXCJNYXVyZWVuZSBFYXJpZVwiLFxuICAgIGFnZTogMzhcbiAgfSxcbiAge1xuICAgIGlkOiBcIjJcIixcbiAgICBuYW1lOiBcIk1heHkgU3RlYXJcIixcbiAgICBhZ2U6IDE0XG4gIH0sXG4gIHtcbiAgICBpZDogXCIzXCIsXG4gICAgbmFtZTogXCJHZXJtYWluZSBQaW5ja25leVwiLFxuICAgIGFnZTogMjlcbiAgfSxcbiAge1xuICAgIGlkOiBcIjRcIixcbiAgICBuYW1lOiBcIlJvc2NvZSBZZXJidXJ5XCIsXG4gICAgYWdlOiA2OVxuICB9LFxuICB7XG4gICAgaWQ6IFwiNVwiLFxuICAgIG5hbWU6IFwiRnJlZGVrIFRvcGxleVwiLFxuICAgIGFnZTogNjBcbiAgfVxuXTtcblxuZXhwb3J0IHsgYm9va3MsIGF1dGhvcnMgfTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "seed.js"
      ],
      "names": [
        "books",
        "id",
        "name",
        "authorId",
        "genre",
        "authors",
        "age"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAMA,KAAK,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EACF,6EAHJ;AAIEC,EAAAA,QAAQ,EAAE,GAJZ;AAKEC,EAAAA,KAAK,EAAE;AALT,CADY,EAQZ;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CARY,EAcZ;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,oBAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAdY,EAoBZ;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,0BAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CApBY,EA0BZ;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,qBAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA1BY,EAgCZ;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAhCY,EAsCZ;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,sCAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAtCY,EA4CZ;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,yBAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA5CY,EAkDZ;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,4BAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAlDY,EAwDZ;AACEH,EAAAA,EAAE,EAAE,EADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAxDY,CAAd;;AAgEA,IAAMC,OAAO,GAAG,CACd;AACEJ,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEI,EAAAA,GAAG,EAAE;AAHP,CADc,EAMd;AACEL,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEI,EAAAA,GAAG,EAAE;AAHP,CANc,EAWd;AACEL,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,mBAFR;AAGEI,EAAAA,GAAG,EAAE;AAHP,CAXc,EAgBd;AACEL,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEI,EAAAA,GAAG,EAAE;AAHP,CAhBc,EAqBd;AACEL,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEI,EAAAA,GAAG,EAAE;AAHP,CArBc,CAAhB",
      "sourceRoot": "/Users/joel/dev/rnd/github.com/dgtlmonk/graphql/server/models",
      "sourcesContent": [
        "// Some fake data\nconst books = [\n  {\n    id: \"1\",\n    name:\n      \"Take Aim at the Police Van (Sono gosôsha wo nerae: 'Jûsangô taihisen' yori)\",\n    authorId: \"3\",\n    genre: \"Action|Crime|Mystery\"\n  },\n  {\n    id: \"2\",\n    name: \"Arachnophobia\",\n    authorId: \"1\",\n    genre: \"Comedy|Horror\"\n  },\n  {\n    id: \"3\",\n    name: \"Permanent Midnight\",\n    authorId: \"2\",\n    genre: \"Drama\"\n  },\n  {\n    id: \"4\",\n    name: \"The Hallelujah Handshake\",\n    authorId: \"5\",\n    genre: \"Drama\"\n  },\n  {\n    id: \"5\",\n    name: \"I Like It Like That\",\n    authorId: \"4\",\n    genre: \"Comedy|Drama|Romance\"\n  },\n  {\n    id: 6,\n    name: \"Exorcist, The\",\n    authorId: \"3\",\n    genre: \"Horror|Mystery\"\n  },\n  {\n    id: 7,\n    name: \"Cosmic Psychos: Blokes You Can Trust\",\n    authorId: \"2\",\n    genre: \"Documentary|Musical\"\n  },\n  {\n    id: 8,\n    name: \"To the Limit (Am Limit)\",\n    authorId: \"4\",\n    genre: \"Documentary\"\n  },\n  {\n    id: 9,\n    name: \"Footnote (Hearat Shulayim)\",\n    authorId: \"2\",\n    genre: \"Drama\"\n  },\n  {\n    id: 10,\n    name: \"Gervaise\",\n    authorId: \"4\",\n    genre: \"Drama\"\n  }\n];\n\nconst authors = [\n  {\n    id: \"1\",\n    name: \"Maureene Earie\",\n    age: 38\n  },\n  {\n    id: \"2\",\n    name: \"Maxy Stear\",\n    age: 14\n  },\n  {\n    id: \"3\",\n    name: \"Germaine Pinckney\",\n    age: 29\n  },\n  {\n    id: \"4\",\n    name: \"Roscoe Yerbury\",\n    age: 69\n  },\n  {\n    id: \"5\",\n    name: \"Fredek Topley\",\n    age: 60\n  }\n];\n\nexport { books, authors };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568219309343
  }
}